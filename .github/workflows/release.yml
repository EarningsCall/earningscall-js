name: Build

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      GITHUB_ACTION_RUNNER: true
      AWS_REGION : us-east-1

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Print Pull Request URL
        run: |
          echo "Pull Request URL: ${{ github.event.pull_request.html_url }}"
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Print Yarn Version
        run: echo "Yarn version is $(yarn --version)"
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile
      - name: Run Tests
        run: |
          yarn test
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Code Coverage
        run: |
          yarn cov
      - name: Coveralls
        uses: coverallsapp/github-action@v2
      - name: Store the build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: npm-package-build-artifacts
          path: build/
          if-no-files-found: error

  publish-npm:
    name: Publish on NPM
    if: startsWith(github.ref, 'refs/tags/')  # only publish to NPM on tag pushes
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Download all the Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm-package-build-artifacts
          path: build/
      - uses: actions/checkout@v4

      - name: Set up Node.js for NPM
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{ matrix.node-version }}

      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # publish-gpr:
  #   name: Publish on GPR
  #   runs-on: ubuntu-latest
  #   needs: docs

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Node.js for GPR
  #       uses: actions/setup-node@v1
  #       with:
  #         registry-url: 'https://npm.pkg.github.com/'
  #         scope: '@dbots-pkg'

  #     - run: npm install
  #     - run: npm run gpr
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}